import glob
import logging
import os

from androguard.core.bytecodes.dvm import DalvikVMFormat

# Set up logging at DEBUG level
logging.basicConfig(level=logging.DEBUG)


def convert_apk_to_dalvik(path_to_file):
    """
    Convert an APK file to Dalvik bytecode format.

    Args:
        path_to_file (str): The path to the APK file to convert.

    This function logs the path of the APK file being converted, then uses the Androguard library to parse the APK and extract the DEX file.
    If the DEX file is empty or corrupted, it prints an error message and returns.
    If the DEX file is valid, it converts it to Dalvik VM format and writes the methods and instructions to a text file.
    """
    logging.debug(f"Converting {path_to_file} to dalvik")

    apk = APK(path_to_file)
    dex = apk.get_dex()

    if not dex:
        print(f"Empty or corrupted DEX file in APK: {path_to_file}")
        return

    try:
        dvm = DalvikVMFormat(dex)
    except Exception as e:
        print(f"Error reading DEX file in APK: {path_to_file}. Error: {str(e)}")

    apk_name = apk.get_app_name()

    with open(f"_dalvik/{apk_name}.txt", "w") as f:
        for method in dvm.get_methods():
            f.write(f"{method.get_class_name()} {method.get_name()} \n")
            for i in method.get_instructions():
                f.write("\t" + i.get_name() + " " + i.get_output() + "\n")


def convert_apk_batch_to_dalvik():
    """
    Convert all APK files in the "_dataset" directory and its subdirectories to Dalvik bytecode format.

    This function uses the glob module to find all APK files in the "_dataset" directory and its subdirectories, then calls convert_apk_to_dalvik for each one.
    """
    for apk_path in glob.glob("_dataset/*/*.apk", recursive=True):
        convert_apk_to_dalvik(apk_path)


def convert_apk_folder_to_dalvik(folder_name):
    """
    Convert all APK files in a specific folder within the "_dataset" directory to Dalvik bytecode format.

    Args:
        folder_name (str): The name of the folder within the "_dataset" directory that contains the APK files to convert.

    This function uses the glob module to find all APK files in the specified folder, then calls convert_apk_to_dalvik for each one.
    """
    for apk_path in glob.glob(f"_dataset/{folder_name}/*.apk"):
        convert_apk_to_dalvik(apk_path)


if __name__ == "__main__":
    os.makedirs("_dalvik", exist_ok=True)
    # If this script is run directly, convert all APK files in the "Subset_goodware_non_obf" folder to Dalvik bytecode format.
    convert_apk_folder_to_dalvik("Subset_goodware_non_obf")
