import torchvision
from colorama import Fore, Style
from torch import device, nn


def create_resnet18(device: device):
    # 1. Get the base model with pretrained weights and send to target device (GPU or CPU)
    weights = torchvision.models.ResNet18_Weights.DEFAULT
    model = torchvision.models.resnet18(weights=weights).to(device)

    # 2. Freeze the base model layers
    for param in model.parameters():
        param.requires_grad = False

    # 3. Change the classifier head
    model.fc = nn.Sequential(
        nn.Linear(512, 500),
        nn.ReLU(inplace=True),
        nn.Linear(500, 2),
    ).to(device)

    # 4. Give the model a name
    model.name = "resnet18"
    print(f"{Fore.GREEN}[INFO]{Style.RESET_ALL} Created model: {model.name}")
    return model, weights


def create_resnet50(device: device):
    # 1. Get the base model with pretrained weights and send to target device (GPU or CPU)
    weights = torchvision.models.ResNet50_Weights.DEFAULT
    model = torchvision.models.resnet50(weights=weights).to(device)

    # 2. Freeze the base model layers
    for param in model.parameters():
        param.requires_grad = False

    # 3. Change the classifier head
    model.fc = nn.Sequential(
        nn.Linear(2048, 500),
        nn.ReLU(inplace=True),
        nn.Linear(500, 2),
    ).to(device)

    # 4. Give the model a name
    model.name = "resnet50"
    print(f"{Fore.GREEN}[INFO]{Style.RESET_ALL} Created model: {model.name}")
    return model, weights
