from androguard.core.bytecodes.apk import APK
import os
import numpy as np

path = "/home/hugod/recherche/cti_code_folder/apks/"


all_assets = []
all_dex = []
all_meta_inf = []
all_res = []
all_res_arsc = []
all_other = []

percent_all_assets = []
percent_all_dex = []
percent_all_meta_inf = []
percent_all_res = []
percent_all_res_arsc = []
percent_all_other = []


files = os.listdir(path)

for file in files:
    apk = APK(path + file)

    assets = 0
    dex = 0
    meta_inf = 0
    res = 0
    res_arsc = 0
    other = 0

    for f in apk.get_files():

        if f.startswith("res/"):
            res += len(apk.get_file(f))

        elif f.startswith("META-INF"):
            meta_inf += len(apk.get_file(f))  

        elif f.endswith(".dex"):
            dex += len(apk.get_file(f))

        elif f.startswith("assets/"):
            assets += len(apk.get_file(f))

        elif f.endswith(".arsc"):
            res_arsc += len(apk.get_file(f))

        else:
            other += len(apk.get_file(f))

        sum = assets + dex + meta_inf + res + res_arsc + other

        if sum!=0:
            all_res.append(res)
            all_assets.append(assets)
            all_dex.append(dex)
            all_meta_inf.append(meta_inf)
            all_other.append(other)
            all_res_arsc.append(res_arsc)


            percent_all_assets.append(int((assets/sum)*100))
            percent_all_dex.append(int((dex/sum)*100))
            percent_all_meta_inf.append(int((meta_inf/sum)*100))
            percent_all_res.append(int((res/sum)*100))
            percent_all_res_arsc.append(int((res_arsc/sum)*100))
            percent_all_other.append(int((other/sum)*100))


percent_arrays = [percent_all_assets, percent_all_dex, percent_all_meta_inf, percent_all_res, percent_all_res_arsc, percent_all_other]
arrays = [all_assets, all_dex, all_meta_inf, all_res, all_res_arsc, all_other]
array_names = ["Assets", "Dex", "Meta Inf", "Res", "Res Arsc", "Other"]

for array, percent_arrays, name in zip(arrays, percent_arrays, array_names):
    mean = np.mean(array)
    average_percent = np.mean(percent_arrays)
    median = np.median(array)

    q1 = np.percentile(array, 25)
    q2 = np.percentile(array, 50)
    q3 = np.percentile(array, 75)

    print("Statistics for", name)
    print("Average %:", int(average_percent))
    print("Mean:", int(mean))
    print("Median:", int(median))
    print("Quartiles: Q1 =", int(q1), "Q2 =", int(q2), "Q3 =", int(q3))
    print()
