import argparse
import glob
import os
import shutil

import pandas as pd
from tqdm import tqdm

DEFAULT_UNSORTED_DATASET_FOLDER = "_dataset/unsorted_dataset"
DEFAULT_CSV_PATH = "/pre_processing/dataset_manipulation/apk_list_tags.csv"


def parse_args():
    parser = argparse.ArgumentParser(
        description="Sort unsorted APK dataset by period and type"
    )
    parser.add_argument(
        "--unsorted_dataset",
        type=str,
        default=DEFAULT_UNSORTED_DATASET_FOLDER,
        help="The root directory of the unsorted dataset.",
    )
    parser.add_argument(
        "--csv",
        type=str,
        default=DEFAULT_CSV_PATH,
        help="The path to the CSV file containing the dataset information.",
    )


def get_folder_name(row):
    if row["num_antivirus_malicious"] == 0:
        return "Goodware_Obf" if row["obfuscated"] == 1 else "Goodware_NoObf"
    elif 1 <= row["num_antivirus_malicious"] <= 5:
        return "Greyware_Obf" if row["obfuscated"] == 1 else "Greyware_NoObf"
    else:
        return "Malware_Obf" if row["obfuscated"] == 1 else "Malware_NoObf"


if __name__ == "__main__":
    # The conditions are as follows for the sorting of the APKs if we train on
    # 2022 (january to december) and test on 2023 (december) :
    # GOODWARE == 0
    # GREYWARE >= 1 and <= 5
    # MALWARE >= 6

    args = parse_args()

    UNSORTED_DATASET_DIRECTORY = args.unsorted_dataset
    PATH_TO_CSV = args.csv

    data = pd.read_csv(PATH_TO_CSV)
    data["first_submission_date"] = pd.to_datetime(
        data["first_submission_date"].apply(lambda x: x.split(" ")[0]),
        format="%d/%m/%Y",
    )

    apks_path = glob.glob(f"{UNSORTED_DATASET_DIRECTORY}/*.apk", recursive=True)
    apk_names_in_folder = [
        (os.path.basename(apk_path).rsplit(".apk")[0]) for apk_path in apks_path
    ]

    for row in tqdm(data.to_dict("records")):
        if row["hash"] in apk_names_in_folder:
            year = row["first_submission_date"].year
            month = row["first_submission_date"].month

            folder_name = get_folder_name(row)

            os.makedirs(f"{folder_name}/{year}_{str(month).zfill(2)}", exist_ok=True)
            shutil.move(
                f"{UNSORTED_DATASET_DIRECTORY}/{row['hash']}.apk",
                f"{folder_name}/{year}_{str(month).zfill(2)}/{row['hash']}.apk",
            )
